datasource db {
    url      = env("DATABASE_URL")
    provider = "sqlite"
}

generator client {
    provider = "prisma-client-js"
}

model Organization {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String   @unique

    applications Application[]
    providers    Provider[]
    users        User[]
    services     Service[]
    activity     Activity[]

    @@map("organizations")
}

model User {
    id             Int      @id @default(autoincrement())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    email          String   @unique
    name           String
    password       String
    role           String   @default("administrator")
    organizationId Int

    organization Organization @relation(fields: [organizationId], references: [id])

    sessions Session[]
    activity Activity[]

    @@map("users")
}

model Session {
    id            String   @id @default(uuid())
    createdAt     DateTime @default(now())
    expiresAt     DateTime
    deviceId      String
    remoteAddress String
    userAgent     String
    userId        Int

    user User @relation(fields: [userId], references: [id])

    @@map("sessions")
}

model Application {
    id             Int      @id @default(autoincrement())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    name           String   @unique
    url            String
    organizationId Int

    organization Organization @relation(fields: [organizationId], references: [id])
    Service      Service[]

    @@map("applications")
}

model Provider {
    id             Int      @id @default(autoincrement())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    name           String   @unique
    url            String
    organizationId Int

    organization Organization @relation(fields: [organizationId], references: [id])
    services     Service[]

    @@map("providers")
}

model Service {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String

    organizationId Int
    organization   Organization @relation(fields: [organizationId], references: [id])

    providerId Int
    provider   Provider @relation(fields: [providerId], references: [id])

    applicationId Int
    application   Application @relation(fields: [applicationId], references: [id])

    @@map("services")
}

model Activity {
    id             Int      @id @default(autoincrement())
    createdAt      DateTime @default(now())
    organizationId Int
    actorId        Int
    subjectType    String
    subjectId      Int
    name           String

    organization Organization @relation(fields: [organizationId], references: [id])
    actor        User         @relation(fields: [actorId], references: [id])

    @@map("activity")
}
