services:
  proxy:
    image: traefik:v2.10
    ports:
      - 80:80
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./proxy:/etc/traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.proxy.rule=Host(`proxy.$TLD`)
      - traefik.http.routers.proxy.service=api@internal
      - traefik.http.routers.proxy.middlewares=ratelimit,authorization,compress
      - traefik.http.middlewares.authorization.basicauth.usersfile=/etc/traefik/.htpasswd
      - traefik.http.middlewares.compress.compress=true
      - traefik.http.middlewares.ratelimit.ratelimit.burst=50
      - traefik.http.middlewares.ratelimit.ratelimit.average=100

  api:
    build: ./api
    ports:
      - 1234
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.$TLD`)
      - traefik.http.routers.api.middlewares=ratelimit,api,compress,
      - traefik.http.middlewares.api.headers.accesscontrolallowmethods=POST,GET,OPTIONS,PUT,PATCH,DELETE
      - traefik.http.middlewares.api.headers.accesscontrolallowheaders=*
      - traefik.http.middlewares.api.headers.accesscontrolalloworiginlistregex=.*
      - traefik.http.middlewares.api.headers.addvaryheader=true"

  db:
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_PASSWORD=123
    volumes:
      - ./db/postgres.conf:/etc/postgres.conf
      - /var/lib/postgresql/data
    command: |
      postgres -c config_file=/etc/postgres.conf
