datasource db {
    url      = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    email     String   @unique
    password  String
    name      String

    sessions    Session[]
    memberships Membership[]
    Activity    Activity[]
}

model Session {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    expiresAt DateTime
    userId    Int
    secret    String   @unique @default(uuid())

    user User @relation(fields: [userId], references: [id])
}

model Membership {
    createdAt      DateTime @default(now())
    updatedAt      DateTime @default(now())
    userId         Int
    organizationId Int
    role           String

    user         User         @relation(fields: [userId], references: [id])
    organization Organization @relation(fields: [organizationId], references: [id])

    @@id([userId, organizationId])
}

model Organization {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    name      String

    memberships Membership[]
    Application Application[]
    Activity    Activity[]
}

model Application {
    id             Int      @id @default(autoincrement())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @default(now())
    organizationId Int
    name           String

    organization Organization @relation(fields: [organizationId], references: [id])
}

model Activity {
    id             Int      @id @default(autoincrement())
    createdAt      DateTime @default(now())
    organizationId Int
    actorId        Int
    subjectType    String
    subjectId      Int
    name           String

    organization Organization @relation(fields: [organizationId], references: [id])
    actor        User         @relation(fields: [actorId], references: [id])
}
